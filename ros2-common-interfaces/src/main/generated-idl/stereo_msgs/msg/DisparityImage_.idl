#ifndef __stereo_msgs__msg__DisparityImage__idl__
#define __stereo_msgs__msg__DisparityImage__idl__

#include "sensor_msgs/msg/./Image_.idl"
#include "sensor_msgs/msg/./RegionOfInterest_.idl"
#include "std_msgs/msg/./Header_.idl"
module stereo_msgs
{
  module msg
  {
    module dds
    {

      @TypeCode(type="stereo_msgs::msg::dds_::DisparityImage_")
      struct DisparityImage
      {
        /**
         * Separate header for compatibility with current TimeSynchronizer.
         * Likely to be removed in a later release, use image.header instead.
         */
        std_msgs::msg::dds::Header header;
        /**
         * Floating point disparity image. The disparities are pre-adjusted for any
         * x-offset between the principal points of the two cameras (in the case
         * that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)
         */
        sensor_msgs::msg::dds::Image image;
        /**
         * Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.
         * Focal length, pixels
         */
        float f;
        /**
         * Baseline, world units
         */
        float t;
        /**
         * Subwindow of (potentially) valid disparity values.
         */
        sensor_msgs::msg::dds::RegionOfInterest valid_window;
        /**
         * The range of disparities searched.
         * In the disparity image, any disparity less than min_disparity is invalid.
         * The disparity search range defines the horopter, or 3D volume that the
         * stereo algorithm can "see". Points with Z outside of:
         * Z_min = fT / max_disparity
         * Z_max = fT / min_disparity
         * could not be found.
         */
        float min_disparity;
        float max_disparity;
        /**
         * Smallest allowed disparity increment. The smallest achievable depth range
         * resolution is delta_Z = (Z^2/fT)*delta_d.
         */
        float delta_d;
      };  // struct DisparityImage
    };  // module dds_
  };  // module msg
};  // module stereo_msgs

#endif  // __stereo_msgs__msg__DisparityImage__idl__
