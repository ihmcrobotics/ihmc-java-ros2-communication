#ifndef __sensor_msgs__msg__NavSatFix__idl__
#define __sensor_msgs__msg__NavSatFix__idl__

#include "sensor_msgs/msg/./NavSatStatus_.idl"
#include "std_msgs/msg/./Header_.idl"
module sensor_msgs
{
  module msg
  {
    module dds
    {
      const octet NavSatFix__COVARIANCE_TYPE_UNKNOWN =
      0;

      const octet NavSatFix__COVARIANCE_TYPE_APPROXIMATED =
      1;

      const octet NavSatFix__COVARIANCE_TYPE_DIAGONAL_KNOWN =
      2;

      const octet NavSatFix__COVARIANCE_TYPE_KNOWN =
      3;


typedef double sensor_msgs__NavSatFix__double_array_9[9];
      /**
       * Navigation Satellite fix for any Global Navigation Satellite System
       * 
       * Specified using the WGS 84 reference ellipsoid
       * If the covariance of the fix is known, fill it in completely. If the
       * GPS receiver provides the variance of each measurement, put them
       * along the diagonal. If only Dilution of Precision is available,
       * estimate an approximate covariance from that.
       */
      @TypeCode(type="sensor_msgs::msg::dds_::NavSatFix_")
      struct NavSatFix
      {
        /**
         * header.stamp specifies the ROS time for this measurement (the
         * corresponding satellite time may be reported using the
         * sensor_msgs/TimeReference message).
         * 
         * header.frame_id is the frame of reference reported by the satellite
         * receiver, usually the location of the antenna.  This is a
         * Euclidean frame relative to the vehicle, not a reference
         * ellipsoid.
         */
        std_msgs::msg::dds::Header header;
        /**
         * Satellite fix status information.
         */
        sensor_msgs::msg::dds::NavSatStatus status;
        /**
         * Latitude [degrees]. Positive is north of equator; negative is south.
         */
        double latitude;
        /**
         * Longitude [degrees]. Positive is east of prime meridian; negative is west.
         */
        double longitude;
        /**
         * Altitude [m]. Positive is above the WGS 84 ellipsoid
         * (quiet NaN if no altitude is available).
         */
        double altitude;
        /**
         * Position covariance [m^2] defined relative to a tangential plane
         * through the reported position. The components are East, North, and
         * Up (ENU), in row-major order.
         * 
         * Beware: this coordinate system exhibits singularities at the poles.
         */
    sensor_msgs__NavSatFix__double_array_9 position_covariance;
        octet position_covariance_type;
      };  // struct NavSatFix
    };  // module dds_
  };  // module msg
};  // module sensor_msgs

#endif  // __sensor_msgs__msg__NavSatFix__idl__
