#ifndef __sensor_msgs__msg__CompressedImage__idl__
#define __sensor_msgs__msg__CompressedImage__idl__

#include "std_msgs/msg/./Header_.idl"
module sensor_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message contains a compressed image.
       * Header frame_id should be optical frame of camera
       * origin of frame should be optical center of cameara
       * +x should point to the right in the image
       * +y should point down in the image
       * +z should point into to plane of the image
       * Acceptable values:
       * jpeg, png
       */
      @TypeCode(type="sensor_msgs::msg::dds_::CompressedImage_")
      struct CompressedImage
      {
        /**
         * Header timestamp should be acquisition time of image
         */
        std_msgs::msg::dds::Header header;
        /**
         * Specifies the format of the data
         */
        string format;
        /**
         * Compressed image buffer
         */
        sequence<octet> data;
      };
    };
  };
};

#endif
