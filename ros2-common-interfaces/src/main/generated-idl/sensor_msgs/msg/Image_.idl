// generated from rosidl_generator_dds_idl/resource/msg.idl.em

#ifndef __sensor_msgs__msg__Image__idl__
#define __sensor_msgs__msg__Image__idl__

#include "std_msgs/msg/./Header_.idl"
module sensor_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message contains an uncompressed image
       * (0, 0) is at top-left corner of image
       * Header frame_id should be optical frame of camera
       * origin of frame should be optical center of cameara
       * +x should point to the right in the image
       * +y should point down in the image
       * +z should point into to plane of the image
       * If the frame_id here and the frame_id of the CameraInfo
       * message associated with the image conflict
       * the behavior is undefined
       * The legal values for encoding are in file src/image_encodings.cpp
       * If you want to standardize a new string format, join
       * ros-users@lists.ros.org and send an email proposing a new encoding.
       * taken from the list of strings in include/sensor_msgs/image_encodings.h
       */
      @TypeCode(type="sensor_msgs::msg::dds_::Image_")
      struct Image
      {
        /**
         * Header timestamp should be acquisition time of image
         */
        std_msgs::msg::dds::Header header;
        /**
         * image height, that is, number of rows
         */
        unsigned long height;
        /**
         * image width, that is, number of columns
         */
        unsigned long width;
        /**
         * Encoding of pixels -- channel meaning, ordering, size
         */
        string encoding;
        /**
         * is this data bigendian?
         */
        octet is_bigendian;
        /**
         * Full row length in bytes
         */
        unsigned long step;
        /**
         * actual matrix data, size is (step * rows)
         */
        sequence<octet> data;
      };  // struct Image
    };  // module dds_
  };  // module msg
};  // module sensor_msgs

#endif  // __sensor_msgs__msg__Image__idl__
