buildscript {
   repositories {
      mavenCentral()
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-release" }
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-vendor" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
      jcenter()
   }
   dependencies {
      classpath "us.ihmc:ros2-msg-to-pubsub-generator:0.13.4"
      classpath "org.ajoberstar:grgit:2.1.0"
   }
}

plugins {
   id("us.ihmc.ihmc-build") version "0.15.7"
   id("us.ihmc.ihmc-ci") version "4.23"
   id("us.ihmc.ihmc-cd") version "0.1"
}

apply plugin: "org.ajoberstar.grgit"

def rclInterfacesPath = "src/main/vendor/rcl_interfaces"
def rclInterfacesUrl = "https://github.com/ros2/rcl_interfaces.git"
def commonInterfacesPath = "src/main/vendor/common_interfaces"
def commonInterfacesUrl = "https://github.com/ros2/common_interfaces.git"
def ros2Release = "0.4.0"
def geometry2Path = "src/main/vendor/geometry2"
def tf2Path = "src/main/vendor/geometry2/tf2_msgs"
def geometry2Url = "https://github.com/ros2/geometry2.git"
def geomtry2Release = "ros2"

ihmc {
   loadProductProperties("../group.gradle.properties")

   configureDependencyResolution()
   resourceDirectory("main", "custom-idl")
   resourceDirectory("main", "generated-idl")
   javaDirectory("main", "generated-java")
   resourceDirectory("main", "vendor")
   configurePublications()
}

mainDependencies {
   compile group: "us.ihmc", name: "euclid-geometry", version: "0.11.0"
   compile group: "us.ihmc", name: "ihmc-pub-sub", version: "0.10.2"
}

generatorDependencies {
   compile group: "us.ihmc", name: "ros2-msg-to-pubsub-generator", version: version
}

task show() {
   doLast {
      project.gradle.includedBuilds.each { println it }
      buildscript.configurations.classpath.each { println "Buildscript: " + it }
      configurations.compile.each { println "Compile: " + it }
   }
}

task generateMessages(type: us.ihmc.ros2.rosidl.Ros2MessageGenerator) {
   doFirst {
      setupVendoredRepo(commonInterfacesPath, commonInterfacesUrl, ros2Release)
      setupVendoredRepo(rclInterfacesPath, rclInterfacesUrl, ros2Release)
      setupVendoredRepo(geometry2Path, geometry2Url, geomtry2Release)
   }

   rosPackages = files(rclInterfacesPath, commonInterfacesPath, tf2Path)
   idlOutputDirectory = file("src/main/generated-idl")
   ros1OutputDirectory = file("src/main/generated-ros1")
   javaOutputDirectory = file("src/main/generated-java")
   customIDLDirectory = files("src/main/custom-idl")
}

private void setupVendoredRepo(String clonePath, String vcsUrl, String tagName)
{
   delete(clonePath)

   if (!file(clonePath).exists())
   {
      org.ajoberstar.grgit.Grgit.clone {
         dir = file(clonePath)
         uri = vcsUrl
         refToCheckout = tagName
      }
   }
}
